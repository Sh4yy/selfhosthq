---
import type { SEOProps } from "astro-seo";
import { getCollection } from "astro:content";
import Sidebar from "../components/sidebar.astro";
import Layout from "./Layout.astro";
import { collections } from "../content/config";
import Navbar from "../components/navbar.astro";

interface Props extends SEOProps {}

const allCollections = await Promise.all(
  // @ts-ignore
  Object.keys(collections).map(getCollection)
);

// TODO: clean this up later.
const lastModified = allCollections.reduce((acc, collection) => {
  const collectionLastModified = collection.reduce((subAcc, submission) => {
    return new Date(submission.data.lastModifiedAt) > subAcc ? new Date(submission.data.lastModifiedAt) : subAcc;
  }, new Date(0));
  return collectionLastModified > acc ? collectionLastModified : acc;
}, new Date(0));

const lastCreated = allCollections.reduce((acc, collection) => {
  const collectionLastCreated = collection.reduce((subAcc, submission) => {
    return new Date(submission.data.publishedAt) > subAcc ? new Date(submission.data.publishedAt) : subAcc;
  }, new Date(0));
  return collectionLastCreated > acc ? collectionLastCreated : acc;
}, new Date(0));

const getStatus = (publishedAt: string, lastModifiedAt: string) => {
  const published = new Date(publishedAt);
  const modified = new Date(lastModifiedAt);
  if (modified >= lastModified) {
    return "updated";
  } else if (published >= lastCreated) {
    return "new";
  } else {
    return undefined;
  }
};
---

<Layout {...Astro.props}>
  <main
    class="flex mx-auto max-w-5xl md:gap-14 px-8 md:px-10 lg:px-12 py-4 md:py-8 lg:py-12"
  >
    <aside class="shrink-0">
      <Sidebar
        sections={allCollections.map((collection) => ({
          title: collection[0].data.name,
          subsections: collection
            .sort((a, b) => a.data.order - b.data.order)
            .map((entry) => ({
              title: entry.data.shortTitle,
              href: `/${entry.collection}/${entry.slug}`,
              status: getStatus(entry.data.publishedAt, entry.data.lastModifiedAt),
            })),
        }))}
      />
    </aside>
    <main class="gap-8 flex flex-col w-full">
      <Navbar />
      <slot />
    </main>
  </main>

  <style is:global>
    ::-webkit-scrollbar {
      display: none;
    }

    body {
      -ms-overflow-style: none;
      scrollbar-width: none;
    }

    .overflow-y-auto {
      scrollbar-width: none;
    }

    .line.highlighted.error {
      background-color: #f43f5e24;
    }

    .line.highlighted {
      background-color: #8e96aa24;
      transition: background-color 0.5s;
      margin: 0 -24px;
      padding: 0 24px;
      width: calc(100% + 48px);
      display: inline-block;
    }

    .line.highlighted.warning {
      background-color: #eab30824;
    }

    .diff {
      margin: 0 -24px;
      padding: 0 24px;
      width: calc(100% + 48px);
      display: inline-block;
    }

    .diff.add {
      background-color: #10b98124;
    }

    .diff.remove {
      background-color: #f43f5e24;
      opacity: 0.7;
    }

    .diff.remove:before {
      content: "-";
      color: #b34e52;
      position: absolute;
    }

    .diff.add:before {
      content: "+";
      color: #18794e;
      position: absolute;
    }

    .has-focused .line {
      opacity: 0.5;
    }

    .has-focused .focused {
      opacity: 1;
    }

    .highlighted-word {
      background-color: #f6f6f7;
      border: 1px solid #c2c2c4;
      padding: 1px 3px;
      margin: -1px -3px;
      border-radius: 4px;
    }
  </style>
</Layout>
